// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource sqlite {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "sqlite"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id          String  @id @default(cuid())
  username    String  @default("")
  displayName String  @default("")
  email       String  @unique @default("")
  posts       Post[]  @relation("Post_author")
  password    String
  isAdmin     Boolean @default(false)
}

model Post {
  id                               String            @id @default(cuid())
  title                            String            @default("")
  category                         Category?         @relation("Post_category", fields: [categoryId], references: [id])
  categoryId                       String?           @map("category")
  series                           StoryCollection?  @relation("Post_series", fields: [seriesId], references: [id])
  seriesId                         String?           @map("series")
  seriesOrder                      Int?
  publishedAt                      DateTime?
  author                           User?             @relation("Post_author", fields: [authorId], references: [id])
  authorId                         String?           @map("author")
  page                             Page?             @relation("Post_page", fields: [pageId], references: [id])
  pageId                           String?           @map("page")
  status                           String?           @default("draft")
  content                          String            @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  tags                             Tag[]             @relation("Post_tags")
  url                              String            @default("")
  from_Tag_posts                   Tag[]             @relation("Tag_posts")
  from_StoryCollection_seriesPosts StoryCollection[] @relation("StoryCollection_seriesPosts")

  @@index([categoryId])
  @@index([seriesId])
  @@index([authorId])
  @@index([pageId])
}

model Category {
  id                 String @id @default(cuid())
  name               String @unique @default("")
  description        String @unique @default("")
  from_Post_category Post[] @relation("Post_category")
}

model Tag {
  id             String @id @default(cuid())
  name           String @unique @default("")
  description    String @unique @default("")
  posts          Post[] @relation("Tag_posts")
  from_Post_tags Post[] @relation("Post_tags")
}

model StoryCollection {
  id               String @id @default(cuid())
  title            String @unique @default("")
  socialMediaBrief String @default("")
  synopsis         String @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  seriesPosts      Post[] @relation("StoryCollection_seriesPosts")
  from_Post_series Post[] @relation("Post_series")
}

model Page {
  id               String  @id @default(cuid())
  title            String  @unique @default("")
  pageOrder        Int?
  pageType         String? @default("standard")
  socialMediaBrief String  @default("")
  content          String  @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  postSections     String  @default("")
  status           String? @default("draft")
  showInNav        Boolean @default(false)
  from_Post_page   Post[]  @relation("Post_page")
}
